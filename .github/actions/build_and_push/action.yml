name: Build and Push (Single)
description: "Build and Push the glua.dev Docker image"

inputs:
  gmod_branch:
    description: "The branch to build. Must be 'public'/'x86-64'/'dev'/'prerelease'"
    required: true
    default: "public"
  tag_name:
    description: "Tag name for the Docker image (or version tag)"
    required: true
  release:
    type: boolean
    description: "Is this a full release?"
    required: true
  github_token:
    description: "GitHub Token"
    required: true
  game_version:
    description: "The version ID for this build of gmod"
    required: true
  path:
    description: "The path to the glua.dev project"
    required: true
  cloudflare_token:
    description: "Cloudflare API Token"
    required: false
    default: ""
  cloudflare_account_id:
    description: "Cloudflare Account ID"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Get docker-slim
      shell: bash
      run: |
        SLIM_VERSION=1.40.11

        curl --location --output ds.tar.gz https://github.com/slimtoolkit/slim/releases/download/$SLIM_VERSION/dist_linux.tar.gz
        tar -xvzf ds.tar.gz
        mv dist_linux/* $GITHUB_WORKSPACE
        rm -rfv ds.tar.gz dist_linux/

    - name: Build starter image
      shell: bash
      run: |
        cd ${{ inputs.path }}/docker

        docker build --build-arg="GMOD_BRANCH=${{ inputs.gmod_branch }}" --tag glua_dev_fat:latest .

    - name: Make slim image
      shell: bash
      run: |
        cd ${{ inputs.path }}/docker

        if [ "${{ inputs.gmod_branch }}" = "x86-64" ]; then
          BASE=ghcr.io/cfc-servers/glua.dev/64bit
        elif [ "${{ inputs.gmod_branch }}" = "dev" ]; then
          BASE=ghcr.io/cfc-servers/glua.dev/dev
        elif [ "${{ inputs.gmod_branch }}" = "prerelease" ]; then
          BASE=ghcr.io/cfc-servers/glua.dev/prerelease
        else
          BASE=ghcr.io/cfc-servers/glua.dev
        fi

        rawVersionTag=${{ inputs.tag_name }}
        id=${{ inputs.game_version }}

        $GITHUB_WORKSPACE/docker-slim build \
          --target glua_dev_fat:latest \
          --continue-after 15 \
          --show-clogs --show-blogs \
          --include-bin "/usr/bin/date" \
          --include-bin "/usr/bin/echo" \
          --include-bin "/usr/bin/cp" \
          --include-bin "/usr/bin/screen" \
          --include-path "/www" \
          --include-shell \
          --expose 8080 \
          --http-probe-cmd /cgi-bin/healthcheck.sh \
          --http-probe-cmd /cgi-bin/get-output.sh \
          --http-probe-cmd post:/cgi-bin/send-command.sh \
          --tag $BASE:$rawVersionTag \
          --tag $BASE:gamebuild-$id

        # Tag image with "0.27" if we push tag "0.27.5"
        # but not if we push tag "0.27-pre5"
        parentMinorVersion=${rawVersionTag%.*}
        if [[ $parentMinorVersion != "0" ]]; then
          echo "::warning:: Tagging with parent minor version: $parentMinorVersion"
          docker tag $BASE:$rawVersionTag $BASE:$parentMinorVersion
        fi

        if [ "${{ inputs.release }}" = "true" ]; then
          echo "::warning:: Tagging this release as the latest!"
          docker tag $BASE:$rawVersionTag $BASE:latest
        fi

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - name: Tag and push slim image
      shell: bash
      run: |
        if [ "${{ inputs.gmod_branch }}" = "x86-64" ]; then
          BASE=ghcr.io/cfc-servers/glua.dev/64bit
        elif [ "${{ inputs.gmod_branch }}" = "dev" ]; then
          BASE=ghcr.io/cfc-servers/glua.dev/dev
        elif [ "${{ inputs.gmod_branch }}" = "prerelease" ]; then
          BASE=ghcr.io/cfc-servers/glua.dev/prerelease
        else
          BASE=ghcr.io/cfc-servers/glua.dev
        fi

        docker push "$BASE" --all-tags

    - name: Push to Cloudflare Container Registry
      shell: bash
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.cloudflare_token }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cloudflare_account_id }}
      run: |
        if [ "${{ inputs.gmod_branch }}" = "x86-64" ]; then
          docker tag "ghcr.io/cfc-servers/glua.dev/64bit:latest" "glua.dev/64bit:cf"
          npx wrangler containers push "glua.dev/64bit:cf"

        elif [ "${{ inputs.gmod_branch }}" = "dev" ]; then
          docker tag "ghcr.io/cfc-servers/glua.dev/dev:latest" "glua.dev/dev:cf"
          npx wrangler containers push "glua.dev/dev:cf"

        elif [ "${{ inputs.gmod_branch }}" = "prerelease" ]; then
          docker tag "ghcr.io/cfc-servers/glua.dev/prerelease:latest" "glua.dev/prerelease:cf"
          npx wrangler containers push "glua.dev/prerelease:cf"

        else
          docker tag "ghcr.io/cfc-servers/glua.dev:latest" "glua.dev:cf"
          npx wrangler containers push "glua.dev:cf"
        fi
